<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nhc.book.dao.BookMapper">


    <insert id="insertBook" parameterType="com.nhc.book.entity.Book">

        INSERT INTO book(book_id,name,price,category,pnum,imgurl,description)
        VALUES (#{book_id},#{name},#{price},#{category},#{pnum},#{imgurl},#{description})

    </insert>

    <select id="queryBookList" resultType="com.nhc.book.entity.Book">
      SELECT  * FROM book;
    </select>
    <select id="queryBookById" parameterType="java.lang.Integer" resultType="com.nhc.book.entity.Book">
        SELECT *  FROM book WHERE id=#{id}
    </select>

    <select id="queryBookListByCondition" resultType="com.nhc.book.entity.Book" parameterType="com.nhc.book.vo.BookVo">
        SELECT * FROM book
        <trim prefix="where" prefixOverrides="AND">
            <if test="book_id !=null and book_id !=''">
                book_id LIKE CONCAT(CONCAT('%',#{book_id}),'%')
            </if>
            <if test="name !=null and name !=''">
                AND name LIKE CONCAT(CONCAT('%', #{name}),'%')
            </if>
            <if test="category !=null and category!=''">
                AND category = #{category}
            </if>
            <if test="maxprice != null and  price &lt; maxprice">
                AND price &lt; #{maxprice}
            </if>
            <if test="minprice != null and price  &gt;= minprice ">
                AND price >= #{minprice}
            </if>
        </trim>
    </select>
    <update id="updateBook" parameterType="com.nhc.book.entity.Book">
        UPDATE book SET book_id=#{book_id},name=#{name},price = #{price}
        ,category=#{category},pnum=#{pnum},imgurl = #{imgurl},description = #{description}
        WHERE id =#{id}

    </update>

    <delete id="deleteBook" parameterType="java.lang.Integer">
        DELETE FROM book WHERE id=#{id}
    </delete>
    <delete id="deleteBooks" parameterType="int[]">
        DELETE FROM book WHERE id in
        <foreach collection="array" index="no" open="(" close=")" item="arr" separator=",">
            #{arr}
        </foreach>

    </delete>
</mapper>